/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizador_lexico;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Betuc
 */
public class AnalizLL1 extends javax.swing.JInternalFrame {

    AnalizadorLL1 LL1;
    AFD AFD;

    public AnalizLL1() {
        initComponents();

        AFD.ConjAFDs.forEach((a) -> {
            AFD1.addItem(String.valueOf(a.IdAFD));
        });

        DefaultTableModel dtm = (DefaultTableModel) Tabla1.getModel();
        dtm.setColumnCount(2);
        Tabla1.setModel(dtm);

        JTableHeader head = Tabla1.getTableHeader();
        TableColumnModel tcm = head.getColumnModel();

        TableColumn tabCM = tcm.getColumn(0);
        tabCM.setHeaderValue("Token");
        tabCM = tcm.getColumn(1);
        tabCM.setHeaderValue("Lexema");

        Tabla1.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        TablaNoT = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaT = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        Gramatica = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Aceptar = new javax.swing.JButton();
        Terminales = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        AFD1 = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        Probar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Cadena = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("An√°lisis LL(1)");

        TablaNoT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No terminal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaNoT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaNoTMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TablaNoT);

        TablaT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Terminal", "Token"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaT);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setAutoscrolls(true);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(Tabla);

        jLabel1.setText("Gramatica:");

        Aceptar.setText("Crear tabla");
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        Terminales.setText("Asignar terminales");
        Terminales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerminalesActionPerformed(evt);
            }
        });

        jLabel2.setText("Selecciona el AFD");

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setAutoscrolls(true);

        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tabla1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane5.setViewportView(Tabla1);

        Probar.setText("Probar ");
        Probar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProbarActionPerformed(evt);
            }
        });

        jButton1.setText("Analizar sintacticamente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(Gramatica, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cadena, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Probar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(AFD1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(72, 72, 72)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(Aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Terminales)
                        .addGap(98, 98, 98)))
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Gramatica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Aceptar)
                    .addComponent(Terminales))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AFD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Cadena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Probar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaNoTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaNoTMouseClicked

    }//GEN-LAST:event_TablaNoTMouseClicked

    private void TablaTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaTMouseClicked

    }//GEN-LAST:event_TablaTMouseClicked

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        // TODO add your handling code here:
        String cadena = Gramatica.getText();

        LL1 = new AnalizadorLL1(cadena);
        LL1.CrearTablaLL1();

        DefaultTableModel model = (DefaultTableModel) TablaT.getModel();
        Object rows1[] = new Object[2];
        DefaultTableModel model2 = (DefaultTableModel) TablaNoT.getModel();
        Object rows2[] = new Object[1];

        for (String Vt : LL1.Vt2) {
            if (!Vt.equals("¬£")) {
                rows1[0] = Vt;
                rows1[1] = "";
                model.addRow(rows1);
            }
        }

        for (String Vn : LL1.Vn) {
            rows2[0] = Vn;
            model2.addRow(rows2);
        }

        DefaultTableModel dtm = (DefaultTableModel) Tabla.getModel();
        dtm.setColumnCount(LL1.Vt.length + 1);
        Tabla.setModel(dtm);

        JTableHeader head = Tabla.getTableHeader();
        TableColumnModel tcm = head.getColumnModel();
        for (int i = 0; i <= LL1.Vt.length; i++) {
            if (i == 0) {
                TableColumn tabCM = tcm.getColumn(i);
                tabCM.setHeaderValue("No terminal");
            } else {
                TableColumn tabCM = tcm.getColumn(i);
                tabCM.setHeaderValue(LL1.Vt[i - 1].Simbolo);
            }
        }

        model = (DefaultTableModel) Tabla.getModel();
        Object rows[] = new Object[LL1.Vt.length + 1];

        for (int i = 0; i < LL1.Vn.length; i++) {
            rows[0] = LL1.Vn[i];
            for (int j = 1; j <= LL1.Vt.length; j++) {
                rows[j] = LL1.TablaLL1[i][j - 1];
            }
            model.addRow(rows);
        }
    }//GEN-LAST:event_AceptarActionPerformed

    private void TerminalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TerminalesActionPerformed
        DefaultTableModel tm = (DefaultTableModel) TablaT.getModel();

        for (int i = 0; i < tm.getRowCount(); i++) {
            String Terminal = String.valueOf(tm.getValueAt(i, 0));
            String Token = String.valueOf(tm.getValueAt(i, 1));

            if (!Token.isEmpty()) {
                for (SimbTerm Vt : LL1.Vt) {
                    if (Vt.Simbolo.equals(Terminal)) {
                        Vt.Token = Integer.parseInt(Token);
                    }
                }
            }
        }

        for (SimbTerm Vt : LL1.Vt) {
            System.out.println("Terminal = " + Vt.Simbolo + " -> " + Vt.Token);
        }

        JOptionPane.showMessageDialog(null, "Los Tokens han sido asignados");
    }//GEN-LAST:event_TerminalesActionPerformed

    private void ProbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProbarActionPerformed
        // TODO add your handling code here:
        int a1 = Integer.parseInt((String) AFD1.getSelectedItem());
        String cadena = Cadena.getText();

        AFD = new AFD();

        for (AFD a : AFD.ConjAFDs) {
            if (a.IdAFD == a1) {
                AFD = a;
            }
        }

        AnalizLexico AL = new AnalizLexico();
        AL.SetSigma(cadena);
        AL.AutomataFD = AFD;

        DefaultTableModel model = (DefaultTableModel) Tabla1.getModel();
        int token;
        String lexema;

        while (true) {
            token = AL.yylex();
            lexema = AL.Lexema;
            model.addRow(new Object[]{token, lexema});
            if (token == SimbolosEspeciales.FIN) {
                break;
            }
        }

        JOptionPane.showMessageDialog(null, "La cadena ha sido analizada");
    }//GEN-LAST:event_ProbarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cadena = Cadena.getText();
        LL1.SetLexico(cadena, AFD);
        LL1.setVt3();
        if (LL1.AnalizSintacLL1(cadena)) {
            JOptionPane.showMessageDialog(null, "La cadena es sintacticamente correcta");
        } else {
            JOptionPane.showMessageDialog(null, "La cadena ingresada no es sintacticamente correcta");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> AFD1;
    private javax.swing.JButton Aceptar;
    private javax.swing.JTextField Cadena;
    private javax.swing.JTextField Gramatica;
    private javax.swing.JButton Probar;
    private javax.swing.JTable Tabla;
    private javax.swing.JTable Tabla1;
    private javax.swing.JTable TablaNoT;
    private javax.swing.JTable TablaT;
    private javax.swing.JButton Terminales;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}
